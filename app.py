import os
import streamlit as st
from langchain_groq import ChatGroq
from langchain.prompts import PromptTemplate
from dotenv import load_dotenv

load_dotenv()

# Kh·ªüi t·∫°o Groq client
groq_api_key = os.getenv('GROQ_API_KEY')
chat = ChatGroq(
    temperature=0,
    groq_api_key=groq_api_key,
    model_name="llama3-70b-8192"
)

# Template ƒë·ªÉ ƒë·∫£m b·∫£o c√¢u tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát
PROMPT_TEMPLATE = """
B·∫°n l√† m·ªôt tr·ª£ l√Ω AI h·ªØu √≠ch. H√£y tr·∫£ l·ªùi c√¢u h·ªèi sau b·∫±ng ti·∫øng Vi·ªát m·ªôt c√°ch r√µ r√†ng, ch√≠nh x√°c v√† t·ª± nhi√™n:
C√¢u h·ªèi: {question}
"""

# Giao di·ªán Streamlit
st.title("ü§ñ Chatbot Grok")

# Kh·ªüi t·∫°o l·ªãch s·ª≠ chat
if "messages" not in st.session_state:
    st.session_state.messages = []

# Hi·ªÉn th·ªã l·ªãch s·ª≠ chat
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# Nh·∫≠n input t·ª´ ng∆∞·ªùi d√πng
if prompt := st.chat_input("Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."):
    # Th√™m tin nh·∫Øn ng∆∞·ªùi d√πng v√†o l·ªãch s·ª≠
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # X·ª≠ l√Ω c√¢u tr·∫£ l·ªùi t·ª´ Groq
    with st.chat_message("assistant"):
        with st.spinner("ƒêang x·ª≠ l√Ω..."):
            try:
                # T·∫°o prompt v·ªõi y√™u c·∫ßu tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát
                prompt_template = PromptTemplate(
                    template=PROMPT_TEMPLATE,
                    input_variables=["question"]
                )
                chain = prompt_template | chat
                response = chain.invoke({"question": prompt})
                answer = response.content
                
                # Hi·ªÉn th·ªã c√¢u tr·∫£ l·ªùi
                st.markdown(answer)
                
                # L∆∞u c√¢u tr·∫£ l·ªùi v√†o l·ªãch s·ª≠
                st.session_state.messages.append({"role": "assistant", "content": answer})
                
            except Exception as e:
                st.error(f"C√≥ l·ªói x·∫£y ra: {str(e)}")